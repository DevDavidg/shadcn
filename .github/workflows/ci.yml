name: CI

on:
    push:
        branches: [main, develop]
    pull_request:
        branches: [main, develop]

jobs:
    test:
        runs-on: ubuntu-latest

        strategy:
            matrix:
                node-version: [18.x, 20.x]

        steps:
            - name: Checkout code
              uses: actions/checkout@v4

            - name: Setup Node.js ${{ matrix.node-version }}
              uses: actions/setup-node@v4
              with:
                  node-version: ${{ matrix.node-version }}
                  cache: "npm"
                  cache-dependency-path: web/package-lock.json

            - name: Install dependencies
              working-directory: ./web
              run: npm ci

            - name: Type check
              working-directory: ./web
              run: npm run type-check

            - name: Lint
              working-directory: ./web
              run: npm run lint

            - name: Format check
              working-directory: ./web
              run: npm run format:check

            - name: Run unit tests
              working-directory: ./web
              run: npm run test:coverage

            - name: Build application
              working-directory: ./web
              run: npm run build

            - name: Upload coverage reports
              uses: codecov/codecov-action@v3
              with:
                  file: ./web/coverage/lcov.info
                  flags: unittests
                  name: codecov-umbrella

    e2e:
        runs-on: ubuntu-latest
        needs: test

        steps:
            - name: Checkout code
              uses: actions/checkout@v4

            - name: Setup Node.js
              uses: actions/setup-node@v4
              with:
                  node-version: "20.x"
                  cache: "npm"
                  cache-dependency-path: web/package-lock.json

            - name: Install dependencies
              working-directory: ./web
              run: npm ci

            - name: Install Playwright browsers
              working-directory: ./web
              run: npx playwright install --with-deps

            - name: Run Playwright tests
              working-directory: ./web
              run: npm run test:e2e

            - name: Upload Playwright report
              uses: actions/upload-artifact@v3
              if: always()
              with:
                  name: playwright-report
                  path: web/playwright-report/
                  retention-days: 30

    security:
        runs-on: ubuntu-latest

        steps:
            - name: Checkout code
              uses: actions/checkout@v4

            - name: Run Trivy vulnerability scanner
              uses: aquasecurity/trivy-action@master
              with:
                  scan-type: "fs"
                  scan-ref: "."
                  format: "sarif"
                  output: "trivy-results.sarif"

            - name: Upload Trivy scan results
              uses: github/codeql-action/upload-sarif@v2
              with:
                  sarif_file: "trivy-results.sarif"
